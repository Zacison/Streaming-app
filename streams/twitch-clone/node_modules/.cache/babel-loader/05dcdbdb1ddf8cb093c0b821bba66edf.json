{"ast":null,"code":"import _ from 'lodash';\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/redux/reducers/streamReducer.js"],"names":["_","streamReducer","state","action","type","FETCH_STREAMS","mapKeys","payload","FETCH_STREAM","id","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,aAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAY,WAAGF,CAAC,CAACM,OAAF,CAAUH,MAAM,CAACI,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACJ,SAAKC,YAAL;AACI,aAAO,EAAE,GAAGN,KAAL;AAAY,SAACC,MAAM,CAACI,OAAP,CAAeE,EAAhB,GAAqBN,MAAM,CAACI;AAAxC,OAAP;;AACJ,SAAKG,aAAL;AACI,aAAO,EAAE,GAAGR,KAAL;AAAY,SAACC,MAAM,CAACI,OAAP,CAAeE,EAAhB,GAAqBN,MAAM,CAACI;AAAxC,OAAP;;AACJ,SAAKI,WAAL;AACI,aAAO,EAAE,GAAGT,KAAL;AAAY,SAACC,MAAM,CAACI,OAAP,CAAeE,EAAhB,GAAqBN,MAAM,CAACI;AAAxC,OAAP;;AACJ,SAAKK,aAAL;AACI,aAAOZ,CAAC,CAACa,IAAF,CAAOX,KAAP,EAAcC,MAAM,CAACI,OAArB,CAAP;;AACJ;AACI,aAAOL,KAAP;AAZR;AAcH,CAfD;;AAgBA,eAAeD,aAAf","sourcesContent":["import _ from 'lodash';\n\nconst streamReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_STREAMS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case CREATE_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case EDIT_STREAM:\n            return { ...state, [action.payload.id]: action.payload };\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n        default:\n            return state;\n    }\n};\nexport default streamReducer;\n"]},"metadata":{},"sourceType":"module"}