{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport StreamForm from './StreamForm';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../redux/actions/index';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n} //form validation\n\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createStream: formValues => dispatch(createStream(formValues))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(formWrapped);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamCreate.js"],"names":["React","StreamForm","connect","createStream","StreamCreate","Component","onSubmit","formValues","console","log","props","render","handleSubmit","renderInput","validate","errors","title","description","formWrapped","reduxForm","form","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACvCC,QADuC,GAC3BC,UAAD,IAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,KAAL,CAAWP,YAAX,CAAwBI,UAAxB;AACH,KAJsC;AAAA;;AAMvCI,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKN,QAA7B,CAFd;AAAA,8BAGI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAE,KAAKO,WAFpB;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAxBsC,C,CA2B3C;;;AACA,MAAMC,QAAQ,GAAIP,UAAD,IAAgB;AAC7B,QAAMQ,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACR,UAAU,CAACS,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAI,CAACT,UAAU,CAACU,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BN,EAAAA,QAAQ,EAAEA;AAFgB,CAAD,CAAT,CAGjBV,YAHiB,CAApB;;AAKA,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHnB,IAAAA,YAAY,EAAGI,UAAD,IAAgBe,QAAQ,CAACnB,YAAY,CAACI,UAAD,CAAb;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCH,WAAlC,CAAf","sourcesContent":["import React from 'react';\nimport StreamForm from './StreamForm';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../redux/actions/index';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        console.log(formValues);\n        this.props.createStream(formValues);\n    };\n\n    render() {\n        return (\n            <form\n                className=\"ui form error\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\n//form validation\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n\n    return errors;\n};\n\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate: validate,\n})(StreamCreate);\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createStream: (formValues) => dispatch(createStream(formValues)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(formWrapped);\n"]},"metadata":{},"sourceType":"module"}