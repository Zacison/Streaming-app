{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../redux/actions/index';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: stream.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"StreamsList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStreams: () => dispatch(fetchStreams())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","title","id","render","console","log","mapStateToProps","state","Object","values","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,YAAX;AACH;;AAEDK,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IAAY;AACtC,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBAA0BA,MAAM,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAA2BD,MAAM,CAACE,EAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPM,CAAP;AAQH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,OAAvB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAnBoC;;AAsBzC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB;AADN,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHnB,IAAAA,YAAY,EAAE,MAAMmB,QAAQ,CAACnB,YAAY,EAAb;AADzB,GAAP;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../redux/actions/index';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">{stream.title}</div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        console.log(this.props.streams);\n        return <div>StreamsList</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchStreams: () => dispatch(fetchStreams()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);\n"]},"metadata":{},"sourceType":"module"}