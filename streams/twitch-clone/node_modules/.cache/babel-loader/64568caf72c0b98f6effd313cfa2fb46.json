{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../redux/actions/index';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      this.setState({\n        isSignedIn: this.auth.isSignedIn.get()\n      });\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  //only called once\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \" Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), \"Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: () => dispatch(signIn()),\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(GoogleAuth);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","setState","auth","get","onSignInClick","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6B;;AAAA,SAmBrCC,YAnBqC,GAmBrBD,UAAD,IAAgB;AAC3B,WAAKE,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACH,KArBoC;;AAAA,SAuBrCC,aAvBqC,GAuBrB,MAAM;AAClB,WAAKF,IAAL,CAAUR,MAAV;AACH,KAzBoC;;AAAA,SA2BrCW,cA3BqC,GA2BpB,MAAM;AACnB,WAAKH,IAAL,CAAUP,OAAV;AACH,KA7BoC;AAAA;;AAErC;AACAW,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACKC,IADL,CACU;AACFC,QAAAA,QAAQ,EACJ,2EAFF;AAGFC,QAAAA,KAAK,EAAE;AAHL,OADV,EAMKC,IANL,CAMU,MAAM;AACR,aAAKZ,IAAL,GAAYK,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKf,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAE,KAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,SAAd;AACA,aAAKD,IAAL,CAAUH,UAAV,CAAqBkB,MAArB,CAA4B,KAAKjB,YAAjC;AACH,OAVL;AAWH,KAZD;AAaH;;AAcDkB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKpB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,0BACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,KAAKM,cAFlB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,MAQA;AACH,0BACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,KAAKD,aAFlB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;AACJ;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAxDoC;;AA2DzC,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH3B,IAAAA,MAAM,EAAE,MAAM2B,QAAQ,CAAC3B,MAAM,EAAP,CADnB;AAEHC,IAAAA,OAAO,EAAE,MAAM0B,QAAQ,CAAC1B,OAAO,EAAR;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeF,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCxB,UAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../redux/actions/index';\n\nclass GoogleAuth extends React.Component {\n    state = { isSignedIn: null };\n    //only called once\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n                .init({\n                    clientId:\n                        '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n                    scope: 'email',\n                })\n                .then(() => {\n                    this.auth = window.gapi.auth2.getAuthInstance();\n                    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n                    this.auth.isSignedIn.listen(this.onAuthChange);\n                });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n    };\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return null;\n        } else if (this.state.isSignedIn) {\n            return (\n                <button\n                    className=\"ui red google button\"\n                    onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" /> Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"ui red google button\"\n                    onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    Sign in with Google\n                </button>\n            );\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: () => dispatch(signIn()),\n        signOut: () => dispatch(signOut()),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}