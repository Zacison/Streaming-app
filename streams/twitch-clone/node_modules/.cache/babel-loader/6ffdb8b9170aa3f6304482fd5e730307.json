{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, formValues, getFormMeta, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n  renderInput(formProps) {\n    console.log(formProps.meta);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: formProps.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...formProps.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formProps.meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n} //form validation\n\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamCreate.js"],"names":["React","Field","formValues","getFormMeta","reduxForm","StreamCreate","Component","renderInput","formProps","console","log","meta","label","input","error","onSubmit","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,SAAzC,QAA0D,YAA1D;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA,kBAAQH,SAAS,CAACI;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,sBAAWJ,SAAS,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAML,SAAS,CAACG,IAAV,CAAeG;AAArB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDC,EAAAA,QAAQ,CAACb,UAAD,EAAa;AACjBO,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAFd;AAAA,8BAGI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAE,KAAKR,WAFpB;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI,QAAC,KAAD;AACI,QAAA,IAAI,EAAC,aADT;AAEI,QAAA,SAAS,EAAE,KAAKA,WAFpB;AAGI,QAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,cARJ,eAaI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AAlCsC,C,CAqC3C;;;AACA,MAAMY,QAAQ,GAAIjB,UAAD,IAAgB;AAC7B,QAAMkB,MAAM,GAAG,EAAf;;AAEA,MAAI,CAAClB,UAAU,CAACmB,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAI,CAACnB,UAAU,CAACoB,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,eAAehB,SAAS,CAAC;AACrBmB,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA,QAAQ,EAAEA;AAFW,CAAD,CAAT,CAGZd,YAHY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, formValues, getFormMeta, reduxForm } from 'redux-form';\n\nclass StreamCreate extends React.Component {\n    renderInput(formProps) {\n        console.log(formProps.meta);\n        return (\n            <div className=\"field\">\n                <label>{formProps.label}</label>\n                <input {...formProps.input} />\n                <div>{formProps.meta.error}</div>\n            </div>\n        );\n    }\n\n    onSubmit(formValues) {\n        console.log(formValues);\n    }\n\n    render() {\n        return (\n            <form\n                className=\"ui form\"\n                onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter Title\"\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\n//form validation\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'streamCreate',\n    validate: validate,\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}