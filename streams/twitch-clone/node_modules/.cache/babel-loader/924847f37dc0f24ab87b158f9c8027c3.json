{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport formValues from 'redux-form/lib/formValues';\nimport { fetchStream, editStream } from '../../redux/actions/index';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit a stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StreamForm, {\n        initialValues: {\n          title: this.props.stream.title,\n          description: this.props.stream.description\n        },\n        onSubmit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStream: id => dispatch(fetchStream(id)),\n    editStream: (id, formValues) => dispatch(editStream(id, formValues))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamEdit);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamEdit.js"],"names":["React","connect","formValues","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","props","match","params","id","componentDidMount","render","stream","title","description","mapStateToProps","state","ownProps","streams","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,2BAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAKzBN,UAAD,IAAgB;AACvB,WAAKO,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDV,UAAlD;AACH,KAPoC;AAAA;;AACrCW,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAMDE,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AACI,QAAA,aAAa,EAAE;AACXC,UAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWM,MAAX,CAAkBC,KADd;AAEXC,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWM,MAAX,CAAkBE;AAFpB,SADnB;AAKI,QAAA,QAAQ,EAAE,KAAKT;AALnB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAzBoC;;AA4BzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AACHL,IAAAA,MAAM,EAAEI,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADL,GAAP;AAGH,CAJD;;AAKA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHpB,IAAAA,WAAW,EAAGS,EAAD,IAAQW,QAAQ,CAACpB,WAAW,CAACS,EAAD,CAAZ,CAD1B;AAEHR,IAAAA,UAAU,EAAE,CAACQ,EAAD,EAAKV,UAAL,KAAoBqB,QAAQ,CAACnB,UAAU,CAACQ,EAAD,EAAKV,UAAL,CAAX;AAFrC,GAAP;AAIH,CALD;;AAOA,eAAeD,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport formValues from 'redux-form/lib/formValues';\nimport { fetchStream, editStream } from '../../redux/actions/index';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues);\n    };\n\n    render() {\n        if (!this.props.stream) {\n            return <div>...Loading</div>;\n        }\n        return (\n            <div>\n                <h3>Edit a stream</h3>\n                <StreamForm\n                    initialValues={{\n                        title: this.props.stream.title,\n                        description: this.props.stream.description,\n                    }}\n                    onSubmit={this.onSubmit}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id],\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchStream: (id) => dispatch(fetchStream(id)),\n        editStream: (id, formValues) => dispatch(editStream(id, formValues)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}