{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../redux/actions/index';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderDeleteEditButtons(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderDeleteEditButtons(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  renderCreateStreamButton() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), this.renderCreateStreamButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStreams: () => dispatch(fetchStreams())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","props","renderDeleteEditButtons","stream","userId","currentUserId","renderList","streams","map","title","description","id","renderCreateStreamButton","isSignedIn","textAlign","render","console","log","mapStateToProps","state","Object","values","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../redux/actions/index';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderDeleteEditButtons(stream) {\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/`} className=\"ui button primary\">Edit</Link>\n                    <Link className=\"ui button negative\">Delete</Link>\n                </div>\n            );\n        }\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderDeleteEditButtons(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        {stream.title}\n                        <div className=\"description\">{stream.description}</div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    renderCreateStreamButton() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        console.log(this.props.streams);\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                {this.renderCreateStreamButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchStreams: () => dispatch(fetchStreams()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);\n"]},"metadata":{},"sourceType":"module"}