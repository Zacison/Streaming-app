{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../redux/actions/index';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  //only called once\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \" Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), \"Sign in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: () => dispatch(signIn()),\n    signOut: () => dispatch(signOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleAuth);","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","state","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAkBrCC,YAlBqC,GAkBrBC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWN,MAAX;AACH,OAFD,MAEO;AACH,aAAKM,KAAL,CAAWL,OAAX;AACH;AACJ,KAxBoC;;AAAA,SA0BrCM,aA1BqC,GA0BrB,MAAM;AAClB,WAAKC,IAAL,CAAUR,MAAV;AACH,KA5BoC;;AAAA,SA8BrCS,cA9BqC,GA8BpB,MAAM;AACnB,WAAKD,IAAL,CAAUP,OAAV;AACH,KAhCoC;AAAA;;AACrC;AACAS,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACKC,IADL,CACU;AACFC,QAAAA,QAAQ,EACJ,2EAFF;AAGFC,QAAAA,KAAK,EAAE;AAHL,OADV,EAMKC,IANL,CAMU,MAAM;AACR,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKhB,YAAL,CAAkB,KAAKI,IAAL,CAAUH,UAAV,CAAqBgB,GAArB,EAAlB;AACA,aAAKb,IAAL,CAAUH,UAAV,CAAqBiB,MAArB,CAA4B,KAAKlB,YAAjC;AACH,OAVL;AAWH,KAZD;AAaH;;AAkBDmB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKC,KAAL,CAAWnB,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKmB,KAAL,CAAWnB,UAAf,EAA2B;AAC9B,0BACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,KAAKI,cAFlB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,MAQA;AACH,0BACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE,KAAKF,aAFlB;AAAA,gCAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKF,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AA3DoC;;AA8DzC,MAAMG,eAAe,GAAIF,KAAD,IAAW;AAC/B,SAAO;AACHnB,IAAAA,UAAU,EAAEmB,KAAK,CAAChB,IAAN,CAAWH;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH5B,IAAAA,MAAM,EAAE,MAAM4B,QAAQ,CAAC5B,MAAM,EAAP,CADnB;AAEHC,IAAAA,OAAO,EAAE,MAAM2B,QAAQ,CAAC3B,OAAO,EAAR;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAeF,OAAO,CAAC2B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CzB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../redux/actions/index';\n\nclass GoogleAuth extends React.Component {\n    //only called once\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n                .init({\n                    clientId:\n                        '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n                    scope: 'email',\n                })\n                .then(() => {\n                    this.auth = window.gapi.auth2.getAuthInstance();\n                    this.onAuthChange(this.auth.isSignedIn.get());\n                    this.auth.isSignedIn.listen(this.onAuthChange);\n                });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn();\n        } else {\n            this.props.signOut();\n        }\n    };\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return null;\n        } else if (this.state.isSignedIn) {\n            return (\n                <button\n                    className=\"ui red google button\"\n                    onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" /> Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"ui red google button\"\n                    onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    Sign in with Google\n                </button>\n            );\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isSignedIn: state.auth.isSignedIn,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: () => dispatch(signIn()),\n        signOut: () => dispatch(signOut()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}