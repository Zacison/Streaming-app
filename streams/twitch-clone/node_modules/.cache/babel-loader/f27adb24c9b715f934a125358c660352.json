{"ast":null,"code":"import streams from '../../apis/streams';\nimport history from '../../';\nexport const signIn = userId => {\n  return {\n    type: 'SIGN_IN',\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: 'SIGN_OUT'\n  };\n};\nexport const createStream = (formValues, history) => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: 'CREATE_STREAM',\n    payload: response.data\n  }); //programmatic navigation to get the user back to the root route\n};\nexport const fetchStreams = () => {\n  return async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({\n      type: 'FETCH_STREAMS',\n      payload: response.data\n    });\n  };\n};\nexport const fetchStream = id => {\n  return async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n      type: 'FETCH_STREAM',\n      payload: response.data\n    });\n  };\n};\nexport const editStream = (id, formValues) => {\n  return async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n      type: 'EDIT_STREAM',\n      payload: response.data\n    });\n  };\n};\nexport const deleteStream = id => {\n  return async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n      type: 'DELETE_STREAM',\n      payload: id\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/redux/actions/index.js"],"names":["streams","history","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAE,SADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAG,CAACC,UAAD,EAAaP,OAAb,KAAyB,OAAOQ,QAAP,EAAiBC,QAAjB,KAA8B;AAC/E,QAAM;AAAEP,IAAAA;AAAF,MAAaO,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAE,GAAGL,UAAL;AAAiBL,IAAAA;AAAjB,GAAzB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAA3C,GAAD,CAAR,CAJ+E,CAM/E;AACH,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,MAAON,QAAP,IAAoB;AACvB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACgB,GAAR,CAAY,UAAZ,CAAvB;AACAP,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,eADD;AAELC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ;AAC/B,SAAO,MAAOT,QAAP,IAAoB;AACvB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACgB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,cADD;AAELC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,KAAD,CAAR;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB;AAC1C,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACoB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEO,QAAQ,CAACE;AAFb,KAAD,CAAR;AAIH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ;AAChC,SAAO,MAAOT,QAAP,IAAoB;AACvB,UAAMT,OAAO,CAACsB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAT,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAE,eADD;AAELC,MAAAA,OAAO,EAAEa;AAFJ,KAAD,CAAR;AAIH,GAPD;AAQH,CATM","sourcesContent":["import streams from '../../apis/streams';\nimport history from '../../'\nexport const signIn = (userId) => {\n    return {\n        type: 'SIGN_IN',\n        payload: userId,\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: 'SIGN_OUT',\n    };\n};\n\nexport const createStream = (formValues, history) => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post('/streams', { ...formValues, userId });\n\n    dispatch({ type: 'CREATE_STREAM', payload: response.data });\n\n    //programmatic navigation to get the user back to the root route\n};\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n        const response = await streams.get('/streams');\n        dispatch({\n            type: 'FETCH_STREAMS',\n            payload: response.data,\n        });\n    };\n};\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n        const response = await streams.get(`/streams/${id}`);\n\n        dispatch({\n            type: 'FETCH_STREAM',\n            payload: response.data,\n        });\n    };\n};\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n        const response = await streams.put(`/streams/${id}`, formValues);\n\n        dispatch({\n            type: 'EDIT_STREAM',\n            payload: response.data,\n        });\n    };\n};\n\nexport const deleteStream = (id) => {\n    return async (dispatch) => {\n        await streams.delete(`/streams/${id}`);\n\n        dispatch({\n            type: 'DELETE_STREAM',\n            payload: id,\n        });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}