{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js\";\nimport React from 'react';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n  }\n\n  //only called once\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I don't know if we're signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"I am not signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/Zach/Desktop/Programming/React udemy course/streams/twitch-clone/src/components/GoogleAuth.js"],"names":["React","GoogleAuth","Component","state","isSignedIn","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","setState","get","listen","onAuthChange","renderAuthButton","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD6B;AAAA;;AAErC;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACKC,IADL,CACU;AACFC,QAAAA,QAAQ,EACJ,2EAFF;AAGFC,QAAAA,KAAK,EAAE;AAHL,OADV,EAMKC,IANL,CAMU,MAAM;AACR,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE,KAAKU,IAAL,CAAUV,UAAV,CAAqBc,GAArB;AAAd,SAAd;AACA,aAAKJ,IAAL,CAAUV,UAAV,CAAqBe,MAArB,CAA4B,KAAKC,YAAjC;AACH,OAVL;AAWH,KAZD;AAaH;;AAIDC,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKlB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAjCoC;;AAoCzC,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass GoogleAuth extends React.Component {\n    state = { isSignedIn: null };\n    //only called once\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n                .init({\n                    clientId:\n                        '1039753909825-q4kq8cc2u1jkpn2iegc91dns5rgfarmq.apps.googleusercontent.com',\n                    scope: 'email',\n                })\n                .then(() => {\n                    this.auth = window.gapi.auth2.getAuthInstance();\n                    this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n                    this.auth.isSignedIn.listen(this.onAuthChange);\n                });\n        });\n    }\n\n    onAuthChange\n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return <div>I don't know if we're signed in</div>;\n        } else if (this.state.isSignedIn) {\n            return <div>I am signed in</div>;\n        } else {\n            return <div>I am not signed in</div>;\n        }\n    }\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}